apiVersion: v1
data:
  promtail.yml: |
    server:
      log_level: debug
    scrape_configs:
    - job_name: kubernetes-pods-name
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - master
            - qa
      pipeline_stages:
      - json:
          expressions:
            timestamp: time
            message: log
      - output:
          source: message
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - multiline:
          firstline: '(^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2}.)'
      - replace:
          expression: "(\n)"
          replace: ""
      - drop:
          older_than: 5m
          drop_counter_reason: "line_old_than_5m"
      - labels:
          timestamp:
      - labeldrop:
          - timestamp
          - filename
      relabel_configs:
      #- action: keep
      #  regex: true
      #  source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      - source_labels:
        - __meta_kubernetes_pod_label_name
        target_label: __service__
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __service__
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: instance
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container_name
      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        target_label: __path__

kind: ConfigMap
metadata:
  name: promtail
  namespace: loki
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
  namespace: loki
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      name: promtail
  template:
    metadata:
      labels:
        name: promtail
    spec:
      containers:
      - args:
        - -client.url=http://{{ component.loki.ip }}:{{ component.loki.port }}/loki/api/v1/push
        - -config.file=/etc/promtail/promtail.yml
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: {{ component.promtail.image }}
        imagePullPolicy: Always
        name: promtail
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
            scheme: HTTP
          initialDelaySeconds: 10
        ports:
        - containerPort: 80
          name: http-metrics
        securityContext:
          privileged: true
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/promtail
          name: promtail
        - mountPath: /var/log
          name: varlog
        - mountPath: {{ docker_home.stdout }}/containers
          name: varlibdockercontainers
          readOnly: true
        resources:
          limits:
            cpu: 0.5
            memory: 500M
          requests:
            cpu: 0.5
            memory: 100M
      serviceAccount: promtail
      #tolerations:
      #- effect: NoSchedule
      #  operator: Exists
      volumes:
      - configMap:
          name: promtail
        name: promtail
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: {{ docker_home.stdout }}/containers/
        name: varlibdockercontainers
  updateStrategy:
    type: RollingUpdate
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail
  namespace: loki
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: promtail
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: promtail
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promtail
subjects:
- kind: ServiceAccount
  name: promtail
  namespace: loki